{"ast":null,"code":"var _jsxFileName = \"/Users/wjz8597/crudApp/client/src/components/Form/Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { createPost, updatePost } from '../../actions/posts.js';\nimport useStyles from './styles.js';\nimport { useHistory } from 'react-router-dom';\nimport ChipInput from 'material-ui-chip-input';\nconst Form = _ref => {\n  var _user$result4;\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  // const [postData, setPostData] = useState({\n  //     creator: '', title: '', message:'', tags:'', selectedFile:''\n  // });\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: [],\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const history = useHistory();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  useEffect(() => {\n    if (!(post === null || post === void 0 ? void 0 : post.title)) clear();\n    if (post) setPostData(post);\n  }, [post]);\n  const clear = () => {\n    setCurrentId(0);\n    // setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\n    setPostData({\n      title: '',\n      message: '',\n      tags: [],\n      selectedFile: ''\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (currentId === 0) {\n      var _user$result, _user$result2;\n      console.log(user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name);\n      dispatch(createPost({\n        ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }, history));\n      clear();\n    } else {\n      var _user$result3;\n      dispatch(updatePost(currentId, {\n        ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3.name\n      }));\n      clear();\n    }\n  };\n  const handleAddChip = tag => {\n    setPostData({\n      ...postData,\n      tags: [...postData.tags, tag]\n    });\n  };\n  const handleDeleteChip = chipToDelete => {\n    setPostData({\n      ...postData,\n      tags: postData.tags.filter(tag => tag !== chipToDelete)\n    });\n  };\n  if (!(user === null || user === void 0 ? void 0 : (_user$result4 = user.result) === null || _user$result4 === void 0 ? void 0 : _user$result4.name)) {\n    return /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      elevation: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \"Please sign in to create your own account and like others' posts.\"));\n  }\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \" \", currentId > 0 ? 'Editing' : 'Creating', \" a Tag\"), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    fullWidth: true,\n    value: postData.title,\n    onChange: e => setPostData({\n      ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Message\",\n    fullWidth: true,\n    multiline: true,\n    minRows: 3,\n    maxRows: 4,\n    value: postData.message,\n    onChange: e => setPostData({\n      ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '5px 0',\n      width: '94%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ChipInput, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags\",\n    fullWidth: true,\n    value: postData.tags,\n    onAdd: chip => handleAddChip(chip),\n    onDelete: chip => handleDeleteChip(chip),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: _ref2 => {\n      let {\n        base64\n      } = _ref2;\n      return setPostData({\n        ...postData,\n        selectedFile: base64\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, \"Clear\")));\n};\nexport default Form;","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","TextField","Button","Typography","Paper","FileBase","createPost","updatePost","useStyles","useHistory","ChipInput","Form","currentId","setCurrentId","postData","setPostData","title","message","tags","selectedFile","post","state","posts","find","_id","dispatch","classes","history","user","JSON","parse","localStorage","getItem","clear","handleSubmit","e","preventDefault","console","log","result","name","handleAddChip","tag","handleDeleteChip","chipToDelete","filter","paper","root","form","target","value","padding","width","chip","fileInput","base64","buttonSubmit"],"sources":["/Users/wjz8597/crudApp/client/src/components/Form/Form.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {TextField, Button, Typography, Paper} from '@material-ui/core';\n\nimport FileBase from 'react-file-base64';\n\nimport {createPost, updatePost} from '../../actions/posts.js';\nimport useStyles from './styles.js';\nimport { useHistory } from 'react-router-dom';\nimport ChipInput from 'material-ui-chip-input';\n\nconst Form = ({currentId, setCurrentId}) => {\n    // const [postData, setPostData] = useState({\n    //     creator: '', title: '', message:'', tags:'', selectedFile:''\n    // });\n    const [postData, setPostData] = useState({\n        title: '', message:'', tags:[], selectedFile:''\n    });\n\n    const post = useSelector((state) => (currentId ? state.posts.posts.find((message) => message._id === currentId) : null));\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    const history = useHistory();\n    const user = JSON.parse(localStorage.getItem('profile'));\n    useEffect(() => {\n        if (!post?.title) clear();\n        if (post) setPostData(post);\n    }, [post]);\n\n    const clear = () => {\n        setCurrentId(0);\n        // setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\n        setPostData({ title: '', message: '', tags: [], selectedFile: '' });\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (currentId === 0) {\n            console.log(user?.result?.name);\n            dispatch(createPost({...postData, name: user?.result?.name}, history));\n            clear();\n        } else {\n            dispatch(updatePost(currentId, {...postData, name: user?.result?.name}));\n            clear();\n        }\n    };\n\n\n    const handleAddChip = (tag) => {\n        setPostData({ ...postData, tags: [...postData.tags, tag] });\n      };\n    \n      const handleDeleteChip = (chipToDelete) => {\n        setPostData({ ...postData, tags: postData.tags.filter((tag) => tag !== chipToDelete) });\n      };\n\n    if (!user?.result?.name) {\n        return (\n        <Paper className={classes.paper} elevation={6}>\n            <Typography variant=\"h6\" align=\"center\">\n                Please sign in to create your own account and like others' posts.\n            </Typography>\n        </Paper>)\n    }\n\n    return (\n        <Paper className={classes.paper} elevation={6}>\n            <form autoComplete='off' noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <Typography variant=\"h6\"> {currentId > 0? 'Editing' : 'Creating'} a Tag</Typography>\n                {/* <TextField \n                name=\"creator\" \n                variant=\"outlined\" \n                label=\"Creator\" \n                fullWidth\n                value={postData.creator}\n                onChange={(e) => setPostData({...postData, creator:e.target.value})}></TextField> */}\n                <TextField \n                name=\"title\" \n                variant=\"outlined\" \n                label=\"Title\" \n                fullWidth\n                value={postData.title}\n                onChange={(e) => setPostData({...postData, title:e.target.value})}></TextField>\n                <TextField \n                name=\"message\" \n                variant=\"outlined\" \n                label=\"Message\" \n                fullWidth\n                multiline\n                minRows={3}\n                maxRows={4} \n                value={postData.message}\n                onChange={(e) => setPostData({...postData, message:e.target.value})}></TextField>\n                {/* <TextField \n                name=\"tags\" \n                variant=\"outlined\" \n                label=\"Tags\" \n                fullWidth\n                value={postData.tags}\n                onChange={(e) => setPostData({...postData, tags:e.target.value.split(',')})}></TextField> */}\n                <div style={{ padding: '5px 0', width: '94%' }}>\n                    <ChipInput\n                        name=\"tags\"\n                        variant=\"outlined\"\n                        label=\"Tags\"\n                        fullWidth\n                        value={postData.tags}\n                        onAdd={(chip) => handleAddChip(chip)}\n                        onDelete={(chip) => handleDeleteChip(chip)}\n                    />\n                </div>\n                <div className={classes.fileInput}>\n                    <FileBase \n                    type=\"file\"\n                    multiple={false}\n                    onDone={({base64}) => setPostData({...postData, selectedFile:base64})}/>\n                </div>\n                <Button className={classes.buttonSubmit} \n                variant=\"contained\" \n                color=\"primary\"\n                size=\"large\"\n                type=\"submit\"\n                fullWidth>Submit</Button>\n                <Button \n                variant=\"contained\" \n                color=\"secondary\"\n                size=\"small\"\n                onClick={clear}\n                fullWidth>Clear</Button>\n                \n            </form>\n        </Paper>\n    )\n}\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module"}