{"ast":null,"code":"import { START_LOADING, END_LOADING, FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE, COMMENT } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPost(id);\n    dispatch({\n      type: FETCH_POST,\n      payload: {\n        post: data\n      }\n    });\n    //dispatch({type: END_LOADING});\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    // const {data} = await api.fetchPosts(page);\n    const {\n      data: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: {\n        data\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = (post, history) => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n    history.push(`/posts/${data._id}`);\n    //dispatch({type: END_LOADING});\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const likePost = id => async dispatch => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n  try {\n    const {\n      data\n    } = await api.likePost(id, user === null || user === void 0 ? void 0 : user.token);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const commentPost = (value, id) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.comment(value, id);\n    dispatch({\n      type: COMMENT,\n      payload: data\n    });\n    return data.comments;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// export const likePost = (id) => async (dispatch) => {\n//     try {\n//         const {data} = await api.likePost(id);\n//         dispatch({type:LIKE, payload:data});\n//     } catch (error) {\n//         console.log(error);\n//     }\n// }\n// export const commentPost = (value, id) => async (dispatch) => {\n//     try {\n//         const {data} = await api.comment(value, id);\n//         dispatch({type: COMMENT, payload: data});\n//         return data.comments;\n//     } catch (error) {\n//         console.log(error);\n//     }\n\n// }","map":{"version":3,"names":["START_LOADING","END_LOADING","FETCH_ALL","FETCH_POST","FETCH_BY_SEARCH","CREATE","UPDATE","DELETE","LIKE","COMMENT","api","getPost","id","dispatch","type","data","fetchPost","payload","post","error","console","log","getPosts","page","currentPage","numberOfPages","fetchPosts","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","history","push","_id","updatePost","message","likePost","user","JSON","parse","localStorage","getItem","token","commentPost","value","comment","comments","deletePost"],"sources":["/Users/wjz8597/crudApp/client/src/actions/posts.js"],"sourcesContent":["import { START_LOADING, END_LOADING, FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE, COMMENT} from '../constants/actionTypes';\nimport * as api from '../api/index.js';\n\nexport const getPost = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING });\n        const {data} = await api.fetchPost(id);\n        dispatch({type: FETCH_POST, payload: { post: data }});\n        //dispatch({type: END_LOADING});\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const getPosts = (page) => async (dispatch) => {\n    try {\n        dispatch({type: START_LOADING});\n        // const {data} = await api.fetchPosts(page);\n        const {data: { data, currentPage, numberOfPages }} = await api.fetchPosts(page);\n        dispatch({type: FETCH_ALL, payload: { data, currentPage, numberOfPages }});\n        dispatch({type: END_LOADING});\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n    try {\n        dispatch({type: START_LOADING});\n        const {data: {data}} = await api.fetchPostsBySearch(searchQuery);\n        dispatch({type: FETCH_BY_SEARCH, payload: {data}});\n        dispatch({type: END_LOADING});\n    } catch(error) {\n        console.log(error);\n    }\n}\n\nexport const createPost = (post, history) => async (dispatch) => {\n    try {\n        dispatch({type: START_LOADING});\n        const {data} = await api.createPost(post);\n        dispatch({type: CREATE, payload: data});\n        history.push(`/posts/${data._id}`);\n        //dispatch({type: END_LOADING});\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        const {data} = await api.updatePost(id, post);\n        dispatch({type: UPDATE, payload: data});\n    } catch (error) {\n        console.log(error.message);\n    }\n}\n\nexport const likePost = (id) => async (dispatch) => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  try {\n    const { data } = await api.likePost(id, user?.token);\n\n    dispatch({ type: LIKE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const commentPost = (value, id) => async (dispatch) => {\n  try {\n    const { data } = await api.comment(value, id);\n\n    dispatch({ type: COMMENT, payload: data });\n\n    return data.comments;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id);\n        dispatch({type:DELETE, payload:id});\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// export const likePost = (id) => async (dispatch) => {\n//     try {\n//         const {data} = await api.likePost(id);\n//         dispatch({type:LIKE, payload:data});\n//     } catch (error) {\n//         console.log(error);\n//     }\n// }\n// export const commentPost = (value, id) => async (dispatch) => {\n//     try {\n//         const {data} = await api.comment(value, id);\n//         dispatch({type: COMMENT, payload: data});\n//         return data.comments;\n//     } catch (error) {\n//         console.log(error);\n//     }\n    \n// }"],"mappings":"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"},"metadata":{},"sourceType":"module"}