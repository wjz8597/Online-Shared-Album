{"ast":null,"code":"import * as api from '../api/index.js';\nexport const getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts();\n    dispatch({\n      type: 'FETCH_ALL',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: 'CREATE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: 'UPDATE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: 'DELETE',\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","getPosts","dispatch","data","fetchPosts","type","payload","error","console","log","message","createPost","post","updatePost","id","deletePost"],"sources":["/Users/wjz8597/crudApp/client/src/actions/posts.js"],"sourcesContent":["import * as api from '../api/index.js';\n\nexport const getPosts = () => async (dispatch) => {\n    try {\n        const {data} = await api.fetchPosts();\n        dispatch({type: 'FETCH_ALL', payload: data});\n    } catch (error) {\n        console.log(error.message);\n    }\n};\n\n\n\n\n\nexport const createPost = (post) => async (dispatch) => {\n    try {\n        const {data} = await api.createPost(post);\n        dispatch({type:'CREATE', payload: data});\n    } catch (error) {\n        console.log(error.message);\n    }\n};\n\n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        const {data} = await api.updatePost(id, post);\n        dispatch({type: 'UPDATE', payload: data});\n    } catch (error) {\n        console.log(error.message);\n    }\n}\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id);\n        dispatch({type:'DELETE', payload:id});\n    } catch (error) {\n        console.log(error);\n    }\n}"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,iBAAiB;AAEtC,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACA,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMH,GAAG,CAACI,UAAU,EAAE;IACrCF,QAAQ,CAAC;MAACG,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAEH;IAAI,CAAC,CAAC;EAChD,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAC9B;AACJ,CAAC;AAMD,OAAO,MAAMC,UAAU,GAAIC,IAAI,IAAK,MAAOV,QAAQ,IAAK;EACpD,IAAI;IACA,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMH,GAAG,CAACW,UAAU,CAACC,IAAI,CAAC;IACzCV,QAAQ,CAAC;MAACG,IAAI,EAAC,QAAQ;MAAEC,OAAO,EAAEH;IAAI,CAAC,CAAC;EAC5C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAC9B;AACJ,CAAC;AAGD,OAAO,MAAMG,UAAU,GAAG,CAACC,EAAE,EAAEF,IAAI,KAAK,MAAOV,QAAQ,IAAK;EACxD,IAAI;IACA,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMH,GAAG,CAACa,UAAU,CAACC,EAAE,EAAEF,IAAI,CAAC;IAC7CV,QAAQ,CAAC;MAACG,IAAI,EAAE,QAAQ;MAAEC,OAAO,EAAEH;IAAI,CAAC,CAAC;EAC7C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAC9B;AACJ,CAAC;AACD,OAAO,MAAMK,UAAU,GAAID,EAAE,IAAK,MAAOZ,QAAQ,IAAK;EAClD,IAAI;IACA,MAAMF,GAAG,CAACe,UAAU,CAACD,EAAE,CAAC;IACxBZ,QAAQ,CAAC;MAACG,IAAI,EAAC,QAAQ;MAAEC,OAAO,EAACQ;IAAE,CAAC,CAAC;EACzC,CAAC,CAAC,OAAOP,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC"},"metadata":{},"sourceType":"module"}