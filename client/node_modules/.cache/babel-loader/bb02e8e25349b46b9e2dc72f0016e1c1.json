{"ast":null,"code":"import { START_LOADING, END_LOADING, FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE, COMMENT } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPost(id);\n    dispatch({\n      type: FETCH_POST,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = (post, history) => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n    history.push(`/posts/${data._id}`);\n    //dispatch({type: END_LOADING});\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const commentPost = (value, id) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.comment(value, id);\n    dispatch({\n      type: COMMENT,\n      payload: data\n    });\n    return data.comments;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["START_LOADING","END_LOADING","FETCH_ALL","FETCH_POST","FETCH_BY_SEARCH","CREATE","UPDATE","DELETE","LIKE","COMMENT","api","getPost","id","dispatch","type","data","fetchPost","payload","error","console","log","getPosts","page","fetchPosts","message","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","post","history","push","_id","updatePost","deletePost","likePost","commentPost","value","comment","comments"],"sources":["/Users/wjz8597/crudApp/client/src/actions/posts.js"],"sourcesContent":["import { START_LOADING, END_LOADING, FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE, COMMENT} from '../constants/actionTypes';\nimport * as api from '../api/index.js';\n\nexport const getPost = (id) => async (dispatch) => {\n    try {\n        dispatch({type: START_LOADING});\n        const {data} = await api.fetchPost(id);\n        dispatch({type: FETCH_POST, payload: data});\n        dispatch({type: END_LOADING});\n    } catch (error) {\n        console.log(error);\n    }\n}\nexport const getPosts = (page) => async (dispatch) => {\n    try {\n        dispatch({type: START_LOADING});\n        const {data} = await api.fetchPosts(page);\n        dispatch({type: FETCH_ALL, payload: data});\n        dispatch({type: END_LOADING});\n    } catch (error) {\n        console.log(error.message);\n    }\n};\n\n\nexport const getPostsBySearch = (searchQuery) =>  async (dispatch) => {\n    try {\n        dispatch({type: START_LOADING});\n        const {data: {data}} = await api.fetchPostsBySearch(searchQuery);\n        dispatch({type: FETCH_BY_SEARCH, payload: data});\n        dispatch({type: END_LOADING});\n    } catch(error) {\n        console.log(error);\n    }\n}\n\n\nexport const createPost = (post, history) => async (dispatch) => {\n    try {\n        dispatch({type: START_LOADING});\n        const {data} = await api.createPost(post);\n        dispatch({type: CREATE, payload: data});\n        history.push(`/posts/${data._id}`);\n        //dispatch({type: END_LOADING});\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        const {data} = await api.updatePost(id, post);\n        dispatch({type: UPDATE, payload: data});\n    } catch (error) {\n        console.log(error.message);\n    }\n}\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id);\n        dispatch({type:DELETE, payload:id});\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const likePost = (id) => async (dispatch) => {\n    try {\n        const {data} = await api.likePost(id);\n        dispatch({type:LIKE, payload:data});\n    } catch (error) {\n        console.log(error);\n    }\n}\nexport const commentPost = (value, id) => async (dispatch) => {\n    try {\n        const {data} = await api.comment(value, id);\n        dispatch({type: COMMENT, payload: data});\n        return data.comments;\n    } catch (error) {\n        console.log(error);\n    }\n    \n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}