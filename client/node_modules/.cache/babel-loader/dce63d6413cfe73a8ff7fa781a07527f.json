{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:5500'\n});\nAPI.interceptors.request.use(req => {\n  if (localStorage.getItem('profile')) {\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n  }\n  return req;\n});\nexport const fetchPost = id => API.get(`/posts/${id}`);\nexport const fetchPosts = page => API.get(`/posts?page=${page}`);\nexport const fetchPostsBySearch = searchQuery => API.get(`/posts/search?searchQuery=${searchQuery.search || 'none'}&tags=${searchQuery.tags}`);\nexport const createPost = newPost => API.post('/posts', newPost);\nexport const likePost = id => API.patch(`/posts/${id}/likePost`);\nexport const comment = (value, id) => API.post(`/posts/${id}/commentPost`, {\n  value\n});\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = id => API.delete(`/posts/${id}`);\nexport const signIn = formData => API.post('/user/signin', formData);\nexport const signUp = formData => API.post('/user/signup', formData);","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","token","fetchPost","id","get","fetchPosts","page","fetchPostsBySearch","searchQuery","search","tags","createPost","newPost","post","likePost","patch","comment","value","updatePost","updatedPost","deletePost","delete","signIn","formData","signUp"],"sources":["/Users/wjz8597/crudApp/client/src/api/index.js"],"sourcesContent":["import axios from 'axios';\n\nconst API = axios.create({ baseURL: 'http://localhost:5500' });\n\nAPI.interceptors.request.use((req) => {\n  if (localStorage.getItem('profile')) {\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n  }\n\n  return req;\n});\n\nexport const fetchPost = (id) => API.get(`/posts/${id}`);\nexport const fetchPosts = (page) => API.get(`/posts?page=${page}`);\nexport const fetchPostsBySearch = (searchQuery) => API.get(`/posts/search?searchQuery=${searchQuery.search || 'none'}&tags=${searchQuery.tags}`);\nexport const createPost = (newPost) => API.post('/posts', newPost);\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`);\nexport const comment = (value, id) => API.post(`/posts/${id}/commentPost`, { value });\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\n\nexport const signIn = (formData) => API.post('/user/signin', formData);\nexport const signUp = (formData) => API.post('/user/signup', formData);\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EAAEC,OAAO,EAAE;AAAwB,CAAC,CAAC;AAE9DF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,GAAG,IAAK;EACpC,IAAIC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,EAAE;IACnCF,GAAG,CAACG,OAAO,CAACC,aAAa,GAAI,UAASC,IAAI,CAACC,KAAK,CAACL,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAACK,KAAM,EAAC;EAC3F;EAEA,OAAOP,GAAG;AACZ,CAAC,CAAC;AAEF,OAAO,MAAMQ,SAAS,GAAIC,EAAE,IAAKf,GAAG,CAACgB,GAAG,CAAE,UAASD,EAAG,EAAC,CAAC;AACxD,OAAO,MAAME,UAAU,GAAIC,IAAI,IAAKlB,GAAG,CAACgB,GAAG,CAAE,eAAcE,IAAK,EAAC,CAAC;AAClE,OAAO,MAAMC,kBAAkB,GAAIC,WAAW,IAAKpB,GAAG,CAACgB,GAAG,CAAE,6BAA4BI,WAAW,CAACC,MAAM,IAAI,MAAO,SAAQD,WAAW,CAACE,IAAK,EAAC,CAAC;AAChJ,OAAO,MAAMC,UAAU,GAAIC,OAAO,IAAKxB,GAAG,CAACyB,IAAI,CAAC,QAAQ,EAAED,OAAO,CAAC;AAClE,OAAO,MAAME,QAAQ,GAAIX,EAAE,IAAKf,GAAG,CAAC2B,KAAK,CAAE,UAASZ,EAAG,WAAU,CAAC;AAClE,OAAO,MAAMa,OAAO,GAAG,CAACC,KAAK,EAAEd,EAAE,KAAKf,GAAG,CAACyB,IAAI,CAAE,UAASV,EAAG,cAAa,EAAE;EAAEc;AAAM,CAAC,CAAC;AACrF,OAAO,MAAMC,UAAU,GAAG,CAACf,EAAE,EAAEgB,WAAW,KAAK/B,GAAG,CAAC2B,KAAK,CAAE,UAASZ,EAAG,EAAC,EAAEgB,WAAW,CAAC;AACrF,OAAO,MAAMC,UAAU,GAAIjB,EAAE,IAAKf,GAAG,CAACiC,MAAM,CAAE,UAASlB,EAAG,EAAC,CAAC;AAE5D,OAAO,MAAMmB,MAAM,GAAIC,QAAQ,IAAKnC,GAAG,CAACyB,IAAI,CAAC,cAAc,EAAEU,QAAQ,CAAC;AACtE,OAAO,MAAMC,MAAM,GAAID,QAAQ,IAAKnC,GAAG,CAACyB,IAAI,CAAC,cAAc,EAAEU,QAAQ,CAAC"},"metadata":{},"sourceType":"module"}